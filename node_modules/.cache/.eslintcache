[{"C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\index.js":"1","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\App.js":"2","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\landing page\\LandingPage.js":"3","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Contact\\Contact.js":"4","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\NotFound.js":"5","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\landing page\\LandingPageHeader.js":"6","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Gameoflife\\Board.js":"7","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Gameoflife\\Grid.js":"8","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\landing page\\LandingSearchBar.js":"9","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\landing page\\DrugCard\\Cards.js":"10","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\landing page\\DrugCard\\Card.js":"11","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\footer\\Footer.js":"12","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Contact\\ContactFromFeild.js":"13","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Contact\\ContactHeader.js":"14","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\landing page\\Nav.js":"15","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Login\\Login.js":"16","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Login\\CompleteYourRegistration.js":"17"},{"size":340,"mtime":1653571380138,"results":"18","hashOfConfig":"19"},{"size":1140,"mtime":1654163623676,"results":"20","hashOfConfig":"19"},{"size":546,"mtime":1653643971937,"results":"21","hashOfConfig":"19"},{"size":892,"mtime":1653859146909,"results":"22","hashOfConfig":"19"},{"size":197,"mtime":1654164268148,"results":"23","hashOfConfig":"19"},{"size":1436,"mtime":1653649967370,"results":"24","hashOfConfig":"19"},{"size":5571,"mtime":1653864538345,"results":"25","hashOfConfig":"19"},{"size":1873,"mtime":1653861179523,"results":"26","hashOfConfig":"19"},{"size":578,"mtime":1653601526615,"results":"27","hashOfConfig":"19"},{"size":409,"mtime":1653916023919,"results":"28","hashOfConfig":"19"},{"size":749,"mtime":1653916061591,"results":"29","hashOfConfig":"19"},{"size":1631,"mtime":1653858673803,"results":"30","hashOfConfig":"19"},{"size":243,"mtime":1653642605647,"results":"31","hashOfConfig":"19"},{"size":393,"mtime":1653647581724,"results":"32","hashOfConfig":"19"},{"size":1491,"mtime":1653894713631,"results":"33","hashOfConfig":"19"},{"size":1185,"mtime":1653903852921,"results":"34","hashOfConfig":"19"},{"size":948,"mtime":1654164715258,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"22ovpd",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"39"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"39"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\index.js",[],[],[],"C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\App.js",["96","97","98","99","100"],[],"C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\landing page\\LandingPage.js",["101"],[],"import React from 'react'\r\nimport LandingPageHeader from './LandingPageHeader'\r\nimport LandingSearchBar from './LandingSearchBar'\r\nimport { useState } from 'react'\r\nimport Cards from './DrugCard/Cards'\r\nimport Footer from '../footer/Footer'\r\nconst LandingPage = ({setactive,active}) => {\r\n  \r\n  return (\r\n    <>\r\n    <LandingPageHeader active={active} setactive={setactive}/>\r\n    <section className={active ? \"unactive\" : null}>\r\n    <LandingSearchBar/>\r\n    <Cards/>\r\n    <Footer/>\r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LandingPage","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Contact\\Contact.js",["102"],[],"import React from 'react'\r\nimport Nav from '../landing page/Nav'\r\nimport ContactFromFeild from './ContactFromFeild'\r\nimport ContactHeader from './ContactHeader'\r\n\r\nconst Contact = ({active,setactive}) => {\r\n  return (\r\n    <div className='Contact-form-header'>\r\n     <Nav active={active} setactive={setactive}/>\r\n    \r\n  {\r\n    active ? null :   <section className='contact-section-container'>\r\n    <ContactHeader/>\r\n  <div className='contact-input-form-container'>\r\n      <div className='contact-form-input-text'>\r\n        <input type=\"text\" placeholder='Name'/> \r\n        <input type=\"text\" placeholder='Phone Number'/>\r\n        <input type=\"text\" placeholder='Email'/>\r\n      </div>\r\n      <div className='contact-form-input-textarea'>\r\n        <textarea></textarea>\r\n        <button>Send</button>\r\n      </div>\r\n  </div>\r\n\r\n  </section> \r\n  }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\NotFound.js",[],[],"C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\landing page\\LandingPageHeader.js",["103","104"],[],"import React from 'react'\r\nimport './header.css'\r\nimport logo from './img/logo.png'\r\nimport Side from './img/sidepic.png'\r\nimport { Link } from 'react-router-dom'\r\nimport Nav from './Nav'\r\n\r\nconst LandingPageHeader = ({active,setactive}) => {\r\n\r\n  return (\r\n    <>\r\n        <header className='header'>\r\n           <Nav active={active} setactive={setactive}/>\r\n            <div className={active ? \"header-content-container unactive\" : \"header-content-container\"}>\r\n                <div className='header-first-content'>\r\n                    <div className='header-first-content-header'>\r\n                    Connecting the\r\n                    Pharmaceutical World\r\n                    </div>\r\n                    <div className='header-first-content-p'>\r\n                    Take advantaage of 21st century technology\r\n                    to provide legit drugs to the society\r\n                    </div>\r\n                    <div className='header-first-content-btn-container'>\r\n                    <Link className='header-link-btn-Active' to='/'>Register</Link>\r\n                    <Link className='header-link-btn' to='/'>Explore</Link>\r\n                    </div>\r\n                </div>\r\n                <div className='header-second-content'>\r\n                   <img className='header-sideimg' src={Side}></img>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LandingPageHeader","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Gameoflife\\Board.js",["105","106","107","108","109","110"],[],"import React from 'react'\r\nimport Grid from './Grid'\r\nimport { useState,useCallback,useRef } from 'react';\r\nimport produce from 'immer'\r\nimport Nav from '../landing page/Nav'\r\nconst Board = ({active,setactive}) => {\r\n    //setting states\r\n    \r\n    const [row, setrow] = useState(50);\r\n    const [col, setcol] = useState(50)\r\n    const [isRunning, setisRunning] = useState(false)\r\n    \r\n    const randomize =()=>{\r\n        const arr = new Array()\r\n        for(let i=0;i<=row;i++){\r\n           arr.push(Array.from(Array(col), ()=> {\r\n               const random = Math.random()\r\n               if(random>0.7){\r\n                   return 1\r\n               }else{\r\n                   return 0\r\n               }\r\n           }))\r\n        }\r\n        return arr\r\n    }\r\n   \r\n    const createGrid =()=>{\r\n        const arr = new Array()\r\n        for(let i=0;i<=row;i++){\r\n           arr.push(Array.from(Array(col), ()=> 0))\r\n        }\r\n        return arr\r\n    }\r\n  \r\n    const operation =[\r\n        [0, -1],\r\n        [0, 1],\r\n        [1, 0],\r\n        [-1, 0],\r\n        [-1, 1],\r\n        [1, -1],\r\n        [1, 1],\r\n        [-1, -1]\r\n    ]\r\n    \r\n    const runningRef = useRef(isRunning)\r\n    runningRef.current = isRunning\r\n    \r\n     const runSimulation = useCallback(\r\n       () => {\r\n        if(!runningRef.current){\r\n            return;\r\n        }\r\n        //simulate\r\n                setgrid((g)=>{\r\n                    return produce(g, gridCopy =>{\r\n                        for(let i=0; i<row; i++){\r\n                            for(let j=0; j<col; j++){\r\n                                    let neighbors = 0;\r\n                                        operation.map(([x,y])=>{\r\n                                            const newi = i+x;\r\n                                            const newj = j+y;\r\n                                            if(newi >=0 && newi < row && newj>=0 && newj<col){\r\n                                                    neighbors += g[newi][newj]\r\n                                                    \r\n                                                   \r\n                                            }                                         \r\n                                            if(g[i][j] === 1  && neighbors < 2 ){\r\n                                                gridCopy[i][j]= 0\r\n                                              \r\n                                            }else if(neighbors === 3 || neighbors ===2){\r\n                                              \r\n                                                gridCopy[i][j]= 1\r\n                                            }else if(neighbors > 3){\r\n                                                gridCopy[i][j]= 0\r\n                                              \r\n                                            }\r\n                                            else if(g[i][j] === 0 && neighbors === 3){\r\n                                                gridCopy[i][j] = 1\r\n                                              \r\n                                            }\r\n                                           \r\n                                        })\r\n                                }\r\n                            }\r\n                    })\r\n                })\r\n        setTimeout(runSimulation,100)\r\n       },\r\n       [],\r\n     )\r\n     const [gen, setgen] = useState(1)\r\n    //setting the grid into a state\r\n    const [grid, setgrid] = useState(()=> createGrid())\r\n    const button ={\r\n    // width: '60px',\r\n    // height: '40px',\r\n    padding: '20px',\r\n    margin: '20px',\r\n    background: '#237235',\r\n    border: '0',\r\n    color: '#fff',\r\n    borderRadius: '5px'\r\n    }\r\n    const buttonwithcolor ={\r\n        padding: '20px',\r\n        margin: '20px',\r\n        background: `${!isRunning ? '#237235' : '#ff0000cc' }`,\r\n        border: '0',\r\n        color: '#fff',\r\n        borderRadius: '5px'\r\n    }\r\n  return (\r\n    <div style={{ background:'#0d1117'}}>\r\n      <div style={{background:'#333'}}>  <Nav active={active} setactive={setactive} /></div>\r\n        <div style={{display:'flex',justifyContent:'center'}}>\r\n        <button style={ buttonwithcolor}  onClick={()=>{\r\n                setisRunning(!isRunning)\r\n              if(!isRunning){\r\n                  runningRef.current = true\r\n                return  runSimulation()\r\n              }\r\n            }}>{!isRunning ? \"start\" : \"stop\"}</button>\r\n            <button style= {button} onClick={()=>{\r\n                setrow(50)\r\n                setcol(50)\r\n            }}>50X50</button>\r\n            <button style={button} onClick={()=>{\r\n                setrow(40)\r\n                setcol(40)\r\n            }}>40X40</button>\r\n            <button style={button}  onClick={()=>{\r\n                setrow(30)\r\n                setcol(30)\r\n            }}>30X30</button>\r\n            <button style={button}  onClick={()=>{\r\n                setrow(20)\r\n                setcol(20)\r\n            }}>20X20</button>\r\n            <button style={ buttonwithcolor} onClick={()=>{\r\n                   setisRunning(false)\r\n                setgrid(createGrid)\r\n            }}>clear</button>\r\n            <button style={button} onClick={()=>{\r\n                 setgrid(randomize())\r\n            }}>Random</button>\r\n           \r\n        </div>\r\n        <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n        <Grid isRunning={isRunning} row={row} col={col} grid={grid}setgrid={setgrid}/>\r\n        </div>\r\n        <div style={{color:'#fff'}}>{console.log(grid)}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Gameoflife\\Grid.js",["111","112","113","114","115"],[],"import { toBeChecked } from '@testing-library/jest-dom/dist/matchers'\r\nimport { useState,useCallback,useRef } from 'react'\r\nimport produce from 'immer'\r\nconst Grid = ({col,row,grid,setgrid,isRunning}) => {\r\n\r\n \r\n\r\n    //styles for grid\r\n    const gridTemplate ={\r\n        display:'grid',\r\n        gridTemplateColumns:`repeat(${col},26px)`,\r\n        background:'#0d1117',\r\n        width:'100vw',\r\n        justifyContent:'center'\r\n        // gridTemplateRows:`repeat(${row},20px)`,\r\n    }\r\n    //styles for box\r\n    const box ={\r\n        width:'20px',\r\n        height:'20px',\r\n        borderRadius:'5px',\r\n        margin:'5px',\r\n        opacity:'0.5'\r\n       \r\n    }\r\n\r\n  return (\r\n    <>\r\n       \r\n        <div   style={gridTemplate}>\r\n           {\r\n               grid.map((col,x)=>{\r\n                   return col.map((row,w)=>{\r\n                     return  <div key={ `${w}--${x}`} onClick={\r\n                         ()=>{\r\n                             if(grid[x][w] == 0){\r\n                                const newGrid = produce(grid, gridCopy =>{\r\n                                    gridCopy[x][w]=1\r\n                                    \r\n                                 })\r\n                                 setgrid(newGrid)\r\n                             }else{\r\n                                const newGrid = produce(grid, gridCopy =>{\r\n                                    gridCopy[x][w]=0\r\n                                    \r\n                                 })\r\n                                 setgrid(newGrid)\r\n                             }\r\n                          \r\n                         }\r\n                     } style={{...box, background:`${grid[x][w] ? \"#237235\":\"#444\"}`}}>{\r\n                       \r\n                     }</div>\r\n                   })\r\n               })\r\n           }\r\n        </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Grid","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\landing page\\LandingSearchBar.js",["116"],[],"import React from 'react'\r\nimport './LandingPageSearch.css'\r\n\r\nconst LandingSearchBar = () => {\r\n  return (\r\n    <div className='landing-pagesearch-container'>\r\n     <div className='LandingPage-header'>Recent Items</div>\r\n        <div className=\"landing-search-box\">\r\n        <input type=\"search\" placeholder=\"Input Drug Name\" />\r\n        <a href=\"#\">\r\n            <button type='submit' className=\"icon\">\r\n            <span className=\"material-symbols-outlined\"> search</span>\r\n            </button>\r\n        </a>\r\n</div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LandingSearchBar","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\landing page\\DrugCard\\Cards.js",[],[],"C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\landing page\\DrugCard\\Card.js",["117"],[],"C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\footer\\Footer.js",["118"],[],"import React from 'react'\r\nimport './footer.css'\r\nimport logo from '../landing page/img/logo.png'\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <div className='footer-info-container-withlogo'>\r\n        <div className='footer-sign-up-container'>\r\n          <span>Sign Up For Our Newsletter</span>\r\n        \r\n          <span>We Help You To Verify The Authenticity\r\n            Of Your Drugs And Sell Your Drugs The\r\n            Legal Way Before It Expires To Avoid\r\n            Loss Of Money And Life\r\n\r\n            </span>\r\n        </div>\r\n        <div>\r\n    <img src={logo}/>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <div></div>\r\n          <div>\r\n            <div >\r\n              <form className='form-input-container'>\r\n                <input type=\"search\"  className='footer-search-box-search' placeholder='search'/>\r\n                <button type='submit' className=\"icon footer-search-icon\">\r\n                <span className=\"material-symbols-outlined\" > search</span>\r\n                </button>\r\n              </form>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='footer-link-container'>\r\n          <div><strong>Quick Links</strong></div>\r\n          <div><strong>Services</strong></div>\r\n          <div><strong>Social Media</strong></div>\r\n          <div>hell4o</div>\r\n          <div>hello5</div>\r\n          <div>hello6</div>\r\n          <div>hello7</div>\r\n          <div>hello8</div>\r\n          <div>9</div>\r\n          <div>hell10o</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Contact\\ContactFromFeild.js",[],[],"C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Contact\\ContactHeader.js",["119"],[],"import React from 'react'\r\nimport Logo from '../landing page/img/logo.png'\r\nimport './contact-header.css'\r\nconst ContactHeader = () => {\r\n  return (\r\n  <>\r\n    <div className='contact-header-container'>\r\n        <div><h1>Contact us</h1></div>\r\n        <div><h4 className=\"h0\">Get in touch and let us know how we can help.</h4>\r\n</div>\r\n    </div>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ContactHeader","C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\landing page\\Nav.js",["120"],[],"C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Login\\Login.js",["121"],[],"C:\\Users\\lawbl\\Desktop\\my-app\\newpharmalink\\src\\comp\\Login\\CompleteYourRegistration.js",["122"],[],{"ruleId":"123","severity":1,"message":"124","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"127","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":23},{"ruleId":"123","severity":1,"message":"128","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":13},{"ruleId":"123","severity":1,"message":"129","line":12,"column":10,"nodeType":"125","messageId":"126","endLine":12,"endColumn":15},{"ruleId":"123","severity":1,"message":"130","line":12,"column":17,"nodeType":"125","messageId":"126","endLine":12,"endColumn":25},{"ruleId":"123","severity":1,"message":"131","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"132","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":24},{"ruleId":"123","severity":1,"message":"133","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":12},{"ruleId":"134","severity":1,"message":"135","line":30,"column":20,"nodeType":"136","endLine":30,"endColumn":63},{"ruleId":"137","severity":1,"message":"138","line":14,"column":21,"nodeType":"139","messageId":"140","endLine":14,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":29,"column":21,"nodeType":"139","messageId":"140","endLine":29,"endColumn":32},{"ruleId":"141","severity":1,"message":"142","line":61,"column":62,"nodeType":"143","messageId":"144","endLine":61,"endColumn":64},{"ruleId":"145","severity":1,"message":"146","line":91,"column":8,"nodeType":"147","endLine":91,"endColumn":10,"suggestions":"148"},{"ruleId":"123","severity":1,"message":"149","line":93,"column":13,"nodeType":"125","messageId":"126","endLine":93,"endColumn":16},{"ruleId":"123","severity":1,"message":"150","line":93,"column":18,"nodeType":"125","messageId":"126","endLine":93,"endColumn":24},{"ruleId":"123","severity":1,"message":"151","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":21},{"ruleId":"123","severity":1,"message":"131","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":18},{"ruleId":"123","severity":1,"message":"152","line":2,"column":19,"nodeType":"125","messageId":"126","endLine":2,"endColumn":30},{"ruleId":"123","severity":1,"message":"153","line":2,"column":31,"nodeType":"125","messageId":"126","endLine":2,"endColumn":37},{"ruleId":"154","severity":1,"message":"155","line":36,"column":44,"nodeType":"156","messageId":"157","endLine":36,"endColumn":46},{"ruleId":"158","severity":1,"message":"159","line":10,"column":9,"nodeType":"136","endLine":10,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":9,"column":13,"nodeType":"136","endLine":9,"endColumn":72},{"ruleId":"134","severity":1,"message":"135","line":19,"column":5,"nodeType":"136","endLine":19,"endColumn":22},{"ruleId":"123","severity":1,"message":"160","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":12},{"ruleId":"134","severity":1,"message":"135","line":9,"column":14,"nodeType":"136","endLine":9,"endColumn":31},{"ruleId":"123","severity":1,"message":"161","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":15},{"ruleId":"123","severity":1,"message":"162","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":11},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Board' is defined but never used.","'first' is assigned a value but never used.","'setfirst' is assigned a value but never used.","'useState' is defined but never used.","'ContactFromFeild' is defined but never used.","'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'col', 'operation', and 'row'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setgrid' needs the current value of 'row'.","ArrayExpression",["163"],"'gen' is assigned a value but never used.","'setgen' is assigned a value but never used.","'toBeChecked' is defined but never used.","'useCallback' is defined but never used.","'useRef' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Logo' is defined but never used.","'sidepic' is defined but never used.","'Nav' is defined but never used.",{"desc":"164","fix":"165"},"Update the dependencies array to be: [col, operation, row]",{"range":"166","text":"167"},[3315,3317],"[col, operation, row]"]